<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AT_LEAST_ONE_INGREDIENT" xml:space="preserve">
    <value>Note that at least one ingredient is required.</value>
  </data>
  <data name="AT_LEAST_ONE_INSTRUCTION" xml:space="preserve">
    <value>Please ensure there is at least one instruction provided for the recipe.</value>
  </data>
  <data name="CODE_INVALID" xml:space="preserve">
    <value>Invalid code.</value>
  </data>
  <data name="CODE_RESET_PASSWORD_REQUIRED" xml:space="preserve">
    <value>A code to reset your password is required.</value>
  </data>
  <data name="COOKING_TIME_NOT_SUPPORTED" xml:space="preserve">
    <value>The provided cooking time value is not supported.</value>
  </data>
  <data name="DIFFICULTY_LEVEL_NOT_SUPPORTED" xml:space="preserve">
    <value>The specified difficulty level for the recipe is not supported.</value>
  </data>
  <data name="DISH_TYPE_NOT_SUPPORTED" xml:space="preserve">
    <value>The chosen dish type is not supported.</value>
  </data>
  <data name="DUPLICATED_INGREDIENTS_IN_LIST" xml:space="preserve">
    <value>Duplicated ingredients are not allowed in the list.</value>
  </data>
  <data name="EMAIL_ALREADY_REGISTERED" xml:space="preserve">
    <value>Email already registered on the platform.</value>
  </data>
  <data name="EMAIL_EMPTY" xml:space="preserve">
    <value>The email cannot be empty.</value>
  </data>
  <data name="EMAIL_INVALID" xml:space="preserve">
    <value>The email is invalid.</value>
  </data>
  <data name="EMAIL_OR_PASSWORD_INVALID" xml:space="preserve">
    <value>Invalid e-mail and/or password.</value>
  </data>
  <data name="EXPIRED_CODE" xml:space="preserve">
    <value>The code is expired.</value>
  </data>
  <data name="EXPIRED_SESSION" xml:space="preserve">
    <value>Your session has expired. Please log in again to continue.</value>
  </data>
  <data name="GENERATE_ONE_RECIPE_PER_DAY" xml:space="preserve">
    <value>Sorry, you can only generate one recipe per day. Come back tomorrow!</value>
  </data>
  <data name="INGREDIENT_EMPTY" xml:space="preserve">
    <value>The ingredient is left empty, please provide a valid value.</value>
  </data>
  <data name="INGREDIENT_NOT_FOLLOWING_PATTERN" xml:space="preserve">
    <value>Invalid ingredient format. Please ensure the ingredient follows our pattern.</value>
  </data>
  <data name="INSTRUCTION_EMPTY" xml:space="preserve">
    <value>The instruction is left empty, please provide a valid instruction.</value>
  </data>
  <data name="INSTRUCTION_EXCEEDS_LIMIT_CHARACTERS" xml:space="preserve">
    <value>The instruction exceeds the maximum limit of 2000 characters.</value>
  </data>
  <data name="INVALID_NUMBER_INGREDIENTS" xml:space="preserve">
    <value>Invalid number of ingredients. The list must contain between 1 and 5 ingredients.</value>
  </data>
  <data name="INVALID_PASSWORD" xml:space="preserve">
    <value>The password must be longer than 6 characters.</value>
  </data>
  <data name="INVALID_SESSION" xml:space="preserve">
    <value>We couldn't find a valid session. Please log in to access this feature.</value>
  </data>
  <data name="NAME_EMPTY" xml:space="preserve">
    <value>The name cannot be empty.</value>
  </data>
  <data name="NON_NEGATIVE_INSTRUCTION_STEP" xml:space="preserve">
    <value>Use a non-negative value for the instruction step.</value>
  </data>
  <data name="NO_TOKEN" xml:space="preserve">
    <value>Request don't have token.</value>
  </data>
  <data name="ONLY_IMAGES_ACCEPTED" xml:space="preserve">
    <value>Only images (PNG, JPG, JPEG) are accepted.</value>
  </data>
  <data name="PASSWORD_DIFFERENT_CURRENT_PASSWORD" xml:space="preserve">
    <value>The password entered is different from the current password.</value>
  </data>
  <data name="PASSWORD_EMPTY" xml:space="preserve">
    <value>The password cannot be empty.</value>
  </data>
  <data name="RECIPE_NOT_FOUND" xml:space="preserve">
    <value>The recipe could not be found.</value>
  </data>
  <data name="RECIPE_TITLE_EMPTY" xml:space="preserve">
    <value>The recipe title has been left blank. Please provide a valid title.</value>
  </data>
  <data name="TWO_OR_MORE_INSTRUCTIONS_SAME_ORDER" xml:space="preserve">
    <value>When adding instructions, please ensure that each one has a unique step number. Two or more instructions cannot have the same step.</value>
  </data>
  <data name="UNKNOWN_ERROR" xml:space="preserve">
    <value>Unknown error.</value>
  </data>
  <data name="USER_WITHOUT_PERMISSION_ACCESS_RESOURCE" xml:space="preserve">
    <value>You can't access this resource.</value>
  </data>
</root>